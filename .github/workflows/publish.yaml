name: Publish

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
    
    services:
      pse:
        image: kkisalaya/pse-proxy:dev
        env:
          PSE_DEBUG_FLAG: --alsologtostderr
          POLICY_LOG: t
          INVISIRISK_JWT_TOKEN: ${{ secrets.INVISIRISK_JWT_TOKEN }}
          INVISIRISK_PORTAL: https://app.dev.veribom.com/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    container:
      image: ubuntu:20.04
      options: --privileged

    steps:
    - name: Install necessary packages
      run: |
        apt-get update
        apt-get install -y python3 python3-pip python3-venv git iptables

    - uses: invisirisk/pse-action@v1.0.7
      with:
        SCAN_ID: 'Publish-Workflow'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Set up Python
      run: |
        python3 -m venv /opt/venv
        . /opt/venv/bin/activate
        pip install --upgrade pip

    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/build.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        . /opt/venv/bin/activate
        pip install -r requirements/build.txt

    # Use the commit date instead of the current date during the build.
    - run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

    - name: Build
      run: |
        . /opt/venv/bin/activate
        python -m build

    # Generate hashes used for provenance.
    - name: Generate hash
      id: hash
      run: cd dist && echo "hash=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
      with:
        path: ./dist
